
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_workshop'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_workshop'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"



## The following jinja if functions to define schema names are necessary
## because sqlite does not handle schemas very well
## in a "normal" database we would like to separate stage from core etc.  
seeds:
  +schema: "{{ 'SEED' if 'sqlite' not in target.name else None}}"

models:
  dbt_workshop:
    STAGE:
      PENGUIN:
        +schema: "{{ 'stg_pen' if 'sqlite' not in target.name else None }}"
        A1_STAGE:
          +materialized: view
        A2_PSA:
          +materialized: incremental
      A3_HR:
        +schema: "{{ 'stg_hr' if 'sqlite' not in target.name else None }}"
        +materialized: view
    CORE:
      A4_DIMS:
        +schema: "{{ 'core_dim' if 'sqlite' not in target.name else None }}"
        +materialized: table 
      A5_FACTS:
        +schema: "{{ 'core_fct' if 'sqlite' not in target.name else None }}"
        +materialized: view            
    MART:
      STATS:
        +schema: "{{ 'mart_sts' if 'sqlite' not in target.name else None }}"
        A3_VIEWS:
          +materialized: view
        A4_TABLES:
          +materialized: table
